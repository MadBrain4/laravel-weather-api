name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Registro de nuevo usuario'
      description: 'Este endpoint permite registrar un nuevo usuario en el sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre completo del usuario.'
        required: true
        example: 'Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico único.'
        required: true
        example: juan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña segura. Debe coincidir con password_confirmation.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmación de la contraseña. Debe ser igual a password.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Juan Pérez'
      email: juan@example.com
      password: secret123
      password_confirmation: secret123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Usuario registrado correctamente",
            "user": {
              "id": 1,
              "name": "Juan Pérez",
              "email": "juan@example.com",
              "updated_at": "2025-06-07T12:00:00.000000Z",
              "created_at": "2025-06-07T12:00:00.000000Z"
            },
            "token": "1|xXxXxXxXxXxXxXxXxXxXxXx"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": [
                "The email has already been taken."
              ],
              "password": [
                "The password confirmation does not match."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Iniciar sesión'
      description: 'Este endpoint permite autenticar a un usuario existente.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Correo electrónico del usuario.'
        required: true
        example: juan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: juan@example.com
      password: secret123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Inicio de sesión exitoso",
            "user": {
              "id": 1,
              "name": "Juan Pérez",
              "email": "juan@example.com",
              "created_at": "2025-06-07T12:00:00.000000Z",
              "updated_at": "2025-06-07T12:00:00.000000Z"
            },
            "token": "1|xXxXxXxXxXxXxXxXxXxXxXx"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Credenciales inválidas"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener usuario autenticado'
      description: 'Devuelve la información del usuario autenticado mediante el token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Juan Pérez",
            "email": "juan@example.com",
            "created_at": "2025-06-07T12:00:00.000000Z",
            "updated_at": "2025-06-07T12:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cerrar sesión'
      description: 'Este endpoint invalida el token actual del usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Sesión cerrada correctamente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/user/{user_id}/role'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cambiar rol de un usuario'
      description: 'Este endpoint permite cambiar el rol de un usuario específico, si el usuario autenticado tiene permisos para hacerlo.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'ID del usuario cuyo rol se desea cambiar.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
      user: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'Rol a asignar. Debe ser uno de los roles asignables.'
        required: true
        example: admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      role: admin
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Rol actualizado correctamente",
            "user": {
              "id": 2,
              "name": "Pedro Sánchez",
              "email": "pedro@example.com",
              "roles": ["admin"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "No se puede cambiar el rol del superadmin"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "role": [
                "The selected role is invalid."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/role
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un nuevo rol'
      description: 'Este endpoint permite crear un nuevo rol en el sistema.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre del rol. Debe ser único.'
        required: true
        example: editor
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      guard_name:
        name: guard_name
        description: "Nombre del guard (por defecto 'web')."
        required: false
        example: web
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: editor
      guard_name: web
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Rol creado exitosamente",
            "role": {
              "id": 5,
              "name": "editor",
              "guard_name": "web",
              "created_at": "2025-06-07T13:00:00.000000Z",
              "updated_at": "2025-06-07T13:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "name": [
                "The name has already been taken."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/role/{role_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar un rol existente'
      description: 'Este endpoint permite modificar el nombre o guard de un rol existente.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'ID del rol a actualizar.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
      role: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nuevo nombre del rol.'
        required: true
        example: administrador
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      guard_name:
        name: guard_name
        description: 'Nuevo guard (opcional).'
        required: false
        example: api
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: administrador
      guard_name: api
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Rol actualizado exitosamente",
            "role": {
              "id": 5,
              "name": "administrador",
              "guard_name": "api",
              "created_at": "2025-06-07T13:00:00.000000Z",
              "updated_at": "2025-06-07T13:15:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "name": [
                "The name must be at least 3 characters."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/user/language
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar idioma del usuario'
      description: 'Este endpoint permite cambiar el idioma preferido del usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      language:
        name: language
        description: 'El código del idioma.'
        required: false
        example: en
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      language: en
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Idioma actualizado correctamente",
            "language": "es"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "language": [
                "The selected language is invalid."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/language
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener idioma actual del usuario'
      description: 'Devuelve el idioma configurado actualmente para el usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "language": "es"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/weather
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Consultar el clima de una ciudad'
      description: 'Este endpoint permite obtener información del clima actual de una ciudad específica. Al mismo tiempo, guarda esta consulta en el historial del usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      city:
        name: city
        description: 'Nombre de la ciudad a consultar.'
        required: true
        example: Santiago
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      city: Santiago
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "location": {
              "name": "Santiago",
              "region": "Region Metropolitana",
              "country": "Chile",
              "localtime": "2025-06-07 14:00"
            },
            "current": {
              "temp_c": 22.5,
              "condition": {
                "text": "Partly cloudy",
                "icon": "//cdn.weatherapi.com/weather/64x64/day/116.png"
              },
              "wind_kph": 15.2,
              "humidity": 45
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 502
        content: |-
          {
            "message": "No se pudo obtener la información del clima.",
            "error": "API key expired"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/weather/history
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener historial de consultas del clima'
      description: 'Devuelve un listado de ciudades previamente consultadas por el usuario autenticado, junto con la fecha y hora de cada consulta.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "history": [
              {
                "city": "Santiago",
                "consulted_at": "2025-06-07 14:00:00"
              },
              {
                "city": "Buenos Aires",
                "consulted_at": "2025-06-06 11:45:10"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/weather/favorite-cities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener ciudades favoritas'
      description: 'Devuelve una lista de ciudades marcadas como favoritas por el usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "user_id": 5,
                "city": "Santiago",
                "created_at": "2025-06-07T14:00:00.000000Z",
                "updated_at": "2025-06-07T14:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/weather/favorite-cities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Agregar ciudad a favoritos'
      description: 'Permite al usuario autenticado agregar una ciudad a su lista de favoritas.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      city:
        name: city
        description: 'Nombre de la ciudad que se desea agregar.'
        required: true
        example: Santiago
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      city: Santiago
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Ciudad agregada a favoritos correctamente",
            "data": {
              "id": 2,
              "user_id": 5,
              "city": "Santiago",
              "created_at": "2025-06-07T14:01:00.000000Z",
              "updated_at": "2025-06-07T14:01:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "city": [
                "The city field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
